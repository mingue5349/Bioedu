# perl -nle'if(/^bedtools/){print "$_";print `$_`}' readme 


bedtools intersect -a A.bed -b B.bed

bedtools intersect -a A.bed -b B.bed -wa
bedtools intersect -a A.bed -b B.bed -wb
#bedtools intersect -a A.bed -b BB.bed -wb


bedtools intersect -a A.bed -b B.bed -wa -wb
bedtools intersect -a A.bed -b B.bed -wo

bedtools intersect -a A.bed -b B.bed -loj
bedtools intersect -a A.bed -b B.bed -wao

# unique A
bedtools intersect -a C.bed -b D.bed -wa
bedtools intersect -a C.bed -b D.bed -u

# excute time : 2016-08-07 15:15:43 : Get Unique Gene List
bedtools intersect -a C.Gene.bed -b D.bed -u | cut -f4 


# Reporting the number of overlapping features
bedtools intersect -a A.bed -b E.bed -c
# excute time : 2016-08-07 15:18:04 : Get Overlap count per Gene
bedtools intersect -a A.Gene.bed -b E.bed -c | cut -f4- 

# reverse
bedtools intersect -a A.bed -b B.bed -v

# fraction
bedtools intersect -a F.bed -b G.bed -wa -wb -f 0.5



# multiple -b files
bedtools intersect -a query.bed -b d1.bed d2.bed d3.bed

# wa, wb = write the original entry in A and B fro each overlap 
bedtools intersect -wa -wb -a query.bed -b d1.bed d2.bed d3.bed -sorted
bedtools intersect -wa -wb -a query.bed -b d1.bed d2.bed d3.bed -names d1 d2 d3 -sorted
bedtools intersect -wa -wb -a query.bed -b d1.bed d2.bed d3.bed -filenames -sorted

# reverse
#bedtools intersect -wa -wb -a query.bed -b d1.bed d2.bed d3.bed -sorted -v
bedtools intersect -a query.bed -b d1.bed d2.bed d3.bed -sorted -v

# fraction
bedtools intersect -wa -wb -a query.bed -b d1.bed d2.bed d3.bed -names d1 d2 d3 -sorted -f 1





# excute time : 2019-12-15 20:59:41 : 
bedtools intersect -a A.bed.gz -b B.bed 


# excute time : 2019-12-15 21:00:11 : 
cat A.bed | bedtools intersect -a stdin -b B.bed 


# excute time : 2019-12-21 01:16:44 : 
shuf query.bed > query.shuffle.bed 


# excute time : 2019-12-21 01:19:43 : 
bedtools sort -i query.shuffle.bed | bedtools intersect -wa -wb -a stdin -b d1.bed d2.bed d3.bed -names d1 d2 d3 -sorted 2>&1 | less 


