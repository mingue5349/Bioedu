library(TCC)
raw_count <- read.table("03.TCC/count.raw.mtx", header = T, row.names = 1)
sel_col <- c(1,2,3,4,5,6)
group <- c(1,1,1,2,2,2)
tcc <- new("TCC", raw_count, group)
dim(tcc$count)
tcc <- filterLowCountGenes(tcc)
dim(tcc$count)
type <- "edger"
if (type == 'edger') {
tcc <- calcNormFactors(tcc, norm.method="tmm", test.method='edger", iteration=3, FDR=0.1, floorPDEG=0.05) tcc <- estimateDE(tcc,
}
/
type
if (type == "edger"){
    tcc <- calcNormFactors(tcc, norm.method="tmm", test.method="edger",
                           iteration=3, FDR=0.1, floorPDEG=0.05)
    tcc <- estimateDE(tcc, test.method="edger", FDR=0.1)
}else if (type == "deseq"){
    tcc <- calcNormFactors(tcc, norm.method="deseq", test.method="deseq",
                           iteration=3, FDR=0.1, floorPDEG=0.05)
    tcc <- estimateDE(tcc, test.method="deseq", FDR=0.1)
}
table (tcc$estimateDEG)
table (tcc$estimatedDEG)
tcc
table(tcc$estimatedDEG)
eff_count <- getNormalizedData(tcc)
write.table(round(eff_count,3), "03.TCC/count.tmm.mtx", sep="\t", quote=F, col.names=T, row.names=T)
eff_count
result <- getResult(tcc, sort=TRUE)
write.table(result, '03.TCC/DEG.xls', sep='\t', quote=F, col.names=T, row.names=F)
png('03.TCC/DEG.MA.png', width=640, height = 640)
plot (tcc, median.lines = TRUE, cex=0.4)
dev.off()
q()
